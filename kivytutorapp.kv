<WrapedLabel@Label>:
    size_hint_y : None # Do not auto alocation the space the height takes
    # the height of the text + its half
    height: self.texture_size[1] + (self.texture_size[1] / 1)
    markup: True

<KivyTutorRoot>:
    orientation: 'vertical'

    # Declaring the top Action Bar
    ActionBar:
        ActionView:
            ActionPrevious:
                title: 'Application'
                # The Icon Button do no return the last window
                # An Icon can be changed look at the documentation
                with_previous: False
            # the 3 doted vertical Button which include settinsg btn
            ActionOverflow:
                ActionButton:
                    text: 'Settings'
                    #On event press run the function open_settings from the class App
                    on_press: app.open_settings()

    # Manage the # screen or windows
    ScreenManager: 
        id: kivy_screen_manager
        StartScreen:
            name: 'start_screen'

# Creating a new widgets that inhertite from the widget Screen
# This widget accept only one widgets inside it but it possible to use a layout
<StartScreen@Screen>:
    BoxLayout:
        orientation: 'vertical'
        padding: root.width * .02,  root.height * .02
        # Its possible to usse python function like min()
        spacing: min(root.width, root.height) * .02

        WrapedLabel:
            text: '[b]Kivy Math tutor[/b]' # text with bold markup
            font_size: min(root.height, root.width) / 10

        Button:
            text: 'Addition'       
        Button:
            text: 'Substraction' 
        Button:
            text: 'Multiplication'  
        Button:
            text: 'Division'     
        Button:
            text: 'Max!'    
        Button:
            text: 'About this app'

<AboutScreen@Screen>:
    BoxLayout:
        orientation: 'vertical'
        spacing: root.width * .02, root.height * .02
        Label:
            text: app.getText()
            halign : 'center'
            markup: True 
            font_size: root.height / 20
            text_size: (self.width, None)
            center_y: .5
            # You can have this ref in text only
            on_ref_press: app.on_ref_press(*args)